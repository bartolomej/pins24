# TODO: Improve/fix pointer arithmetic / assignments
# TODO: Should this work as well `(hello + 2)^ = 65`?
# TOOD: Double check string assignments (e.g. str_ptr^ = "My string\00")

var input_text_concat_ptr = 0
var input_text_ptr = 0

fun main() =
    let
        var x = 0
        var y = 0
        var max_x = 10
        var out_str_ptr = 0
    in
        out_str_ptr = new(100),
        while (x < max_x)
        do
            y = compute_y(x),
            repeat(out_str_ptr, '*', y),
            append(out_str_ptr, "\n\00"),
            putstr(out_str_ptr),
            x = x + 1
        end,
        0
    end


fun compute_y(x) = x * x

fun append(dst_ptr, src_str) = strcat(dst_ptr + strlen(dst_ptr) * 4, src_str)

fun repeat(dst_ptr, char, count) =
    while (count > 0)
    do
        dst_ptr^ = char,
        dst_ptr = dst_ptr + 4,
        count = count - 1
    end,
    0

fun strcat(dst_ptr, src_ptr) =
    let
        var dst_str_size = 0
        var src_offset = 0
    in
        dst_str_size = strlen(dst_ptr),
        while ((src_ptr + src_offset)^ != '\00')
        do
            (dst_ptr + dst_str_size * 4 + src_offset)^ = (src_ptr + src_offset)^,
            src_offset = src_offset + 4
        end,
        0
    end

fun strlen(src_ptr) =
    let
        var ptr = 0
        var len = 0
    in
        ptr = src_ptr,
        while (ptr^ != '\00')
        do
            len = len + 1,
            ptr = ptr + 4
        end,
        len
    end

fun strcpy(dst_ptr, src_ptr) =
    let
        var offset = 0
    in
        while ((src_ptr + offset)^ != 0)
        do
            (dst_ptr + offset)^ = (src_ptr + offset)^,
            offset = offset + 4
        end,
        # Null terminate the destination string
        (dst_ptr + offset)^ = '\00'
    end,
    0

fun exit(exitcode)
fun getint()
fun putint(value)
fun getstr(straddr)
fun putstr(straddr)
fun new(size)
fun del(straddr)
